<?php
/**
 * ProjectApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  com.brand4impact.client.invoker
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Total API Reference
 *
 * Este contrato se usara para generar los clientes con todos los servicios necesarios.  `!Uso exclusivo interno!`               ---
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@brand4impact.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace com.brand4impact.client.invoker\Test\Api;

use \com.brand4impact.client.invoker\Configuration;
use \com.brand4impact.client.invoker\ApiException;
use \com.brand4impact.client.invoker\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProjectApiTest Class Doc Comment
 *
 * @category Class
 * @package  com.brand4impact.client.invoker
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProjectApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createProject
     *
     * Create a new project.
     *
     */
    public function testCreateProject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProject
     *
     * Get a single project.
     *
     */
    public function testGetProject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProjects
     *
     * Get a set of projects.
     *
     */
    public function testGetProjects()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for switchProject
     *
     * Switch project status.
     *
     */
    public function testSwitchProject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateProject
     *
     * Update a project.
     *
     */
    public function testUpdateProject()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
